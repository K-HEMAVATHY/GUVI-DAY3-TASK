// READ ABOUT THE DIFFERENCE B/W WINDOW , SCREEN AND DOCUMENT

1.Window
The Window interface represents a window containing a DOM document; 
the document property points to the DOM document loaded in that window.

A window for a given document can be obtained using the document.defaultView property.

A global variable, window, representing the window in which the script is running, 
is exposed to JavaScript code.

The Window interface is home to a variety of functions, namespaces, objects, and constructors which are not 
necessarily directly associated with the concept of a user interface window.
Many of these are documented in the JavaScript Reference and the DOM Reference.

*EventTarget
*Window

2.SCREEN
screen
The window object also has a screen object with properties describing the physical display:

screen properties width and height are the full screen

screen properties availWidth and availHeight omit the toolbar

The portion of a screen displaying the rendered document is the viewport in JavaScript, 
which is potentially confusing because we call an application's portion of the screen a window when talking
about interactions with the operating system. 

3.Document
The Document interface represents any web page loaded in the browser and serves as an entry 
point into the web page's content, which is the DOM tree.

The DOM tree includes elements such as <body> and <table>, among many others. 
It provides functionality globally to the document, like how to obtain the page's URL and 
create new elements in the document.

*EventTarget
*Node
*Document
The Document interface describes the common properties and methods for any kind of document. 
Depending on the document's type (e.g. HTML, XML, SVG, â€¦), a larger API is available: HTML documents, 
served with the "text/html" content type, also implement the HTMLDocument interface, whereas XML and SVG 
documents implement the XMLDocument interface.




